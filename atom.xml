<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LeoJhon.Song&#39;s Blog</title>
  
  <subtitle>WELCOME TO MY BLOG!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://leojhonsong.github.io/"/>
  <updated>2019-10-06T22:34:05.919Z</updated>
  <id>https://leojhonsong.github.io/</id>
  
  <author>
    <name>LeoJhon.Song</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>My Configurations Under Ubuntu</title>
    <link href="https://leojhonsong.github.io/2019/03/20/My-configurations-under-Ubuntu/"/>
    <id>https://leojhonsong.github.io/2019/03/20/My-configurations-under-Ubuntu/</id>
    <published>2019-03-20T08:46:21.000Z</published>
    <updated>2019-10-06T22:34:05.919Z</updated>
    
    <content type="html"><![CDATA[<p>I note down here my configurations in order to quick set up my environment on a new machine.</p><a id="more"></a><h1 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h1><h2 id="powerline"><a href="#powerline" class="headerlink" title="powerline"></a>powerline</h2><p>üí°root is another user, need extra configurations.</p><p>1.install it.</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --user git+git://github.com/powerline/powerline</span><br></pre></td></tr></tbody></table></figure><p>2.run <code>pip show powerline-status</code> to show where the package is.</p><p>3.add its launch script to <strong>~/.bashrc</strong>.</p><p>üí° e.g. the location of the script on my computer is<strong>~/.local/lib/python3.7/site-packages/powerline/bindings/bash/powerline.sh</strong></p><h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><p>goto my <a href="https://github.com/LeoJhonSong/vimrc" target="_blank" rel="noopener">vimrc</a>.</p><h1 id="OneDrive"><a href="#OneDrive" class="headerlink" title="OneDrive"></a>OneDrive</h1><p>there are a few onedrive tools on Linux platform, but most of them, for example<code>onedrive-d</code> just support personal onedrive account, onedrive 365 as well asonedrive business are not supported. Someone recommended <code>GoodSync</code>,unfortunately I didn‚Äôt figure out how on earth do I use it üò¢. Good news is Ifind a thing called <a href="https://github.com/abraunegg/onedrive" target="_blank" rel="noopener">onedrive</a> (what aconfusing name), which <strong>support personal account and onedrive 365 and evenonedrive business</strong>!</p><p>goto <a href="https://github.com/abraunegg/onedrive" target="_blank" rel="noopener">abraunegg/onedrive</a> for instructions.</p><p>the guide is clear enough! üëç</p><h1 id="workspace"><a href="#workspace" class="headerlink" title="workspace"></a>workspace</h1><h2 id="isolated-workspaces"><a href="#isolated-workspaces" class="headerlink" title="isolated workspaces"></a>isolated workspaces</h2><p>üîó<a href="https://askubuntu.com/questions/305962/setting-to-only-show-applications-of-current-workspace-in-launcher" target="_blank" rel="noopener">related question on Stack Exchange</a></p><p>1.install <strong>dconf-editor</strong></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install dconf-editor</span><br></pre></td></tr></tbody></table></figure><p>2.open the app and Navigate to <strong>org &gt; gnome &gt; shell &gt; extensions &gt; dash-to-dock</strong>and check isolate-workspaces</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I note down here my configurations in order to quick set up my environment on a new machine.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Configuration" scheme="https://leojhonsong.github.io/categories/Configuration/"/>
    
      <category term="Linux" scheme="https://leojhonsong.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>CAN Bus With RaspberryPi</title>
    <link href="https://leojhonsong.github.io/2019/01/16/CAN-Bus-with-RaspberryPi/"/>
    <id>https://leojhonsong.github.io/2019/01/16/CAN-Bus-with-RaspberryPi/</id>
    <published>2019-01-16T17:38:10.000Z</published>
    <updated>2019-10-06T22:34:05.919Z</updated>
    
    <content type="html"><![CDATA[<div align="right">Language:    <a href="/CAN-Bus-with-RaspberryPi"><code>English</code></a>    <a href="/zh-CN/Ê†ëËéìÊ¥æÁöÑCANÊÄªÁ∫øÈÄö‰ø°"><code>‰∏≠Êñá</code></a></div><p>Recently I am working on A Formula E car, trying to do something with data inthe car‚Äôs CAN Bus. The very basic idea is first transmit data into a RaspberryPi.</p><a id="more"></a><!-- TODO --><blockquote><p>Reference:</p></blockquote><p><a href="https://www.cowfishstudios.com/blog/canned-pi-part1" target="_blank" rel="noopener">https://www.cowfishstudios.com/blog/canned-pi-part1</a></p><p><a href="https://zhuanlan.zhihu.com/p/30657287" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/30657287</a><a href="https://zhuanlan.zhihu.com/p/30247549" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/30247549</a></p><p><a href="https://www.gridconnect.com/collections/can-pc-interfaces" target="_blank" rel="noopener">https://www.gridconnect.com/collections/can-pc-interfaces</a><a href="https://www.raspberrypi.org/forums/viewtopic.php?t=141052" target="_blank" rel="noopener">https://www.raspberrypi.org/forums/viewtopic.php?t=141052</a><a href="https://www.raspberrypi.org/forums/viewtopic.php?p=524910" target="_blank" rel="noopener">https://www.raspberrypi.org/forums/viewtopic.php?p=524910</a><a href="https://www.raspberrypi.org/forums/viewtopic.php?f=44&amp;t=7027" target="_blank" rel="noopener">https://www.raspberrypi.org/forums/viewtopic.php?f=44&amp;t=7027</a><a href="https://www.raspberrypi.org/forums/viewtopic.php?p=444938" target="_blank" rel="noopener">https://www.raspberrypi.org/forums/viewtopic.php?p=444938</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;right&quot;&gt;Language:
    &lt;a href=&quot;/CAN-Bus-with-RaspberryPi&quot;&gt;&lt;code&gt;English&lt;/code&gt;&lt;/a&gt;
    &lt;a href=&quot;/zh-CN/Ê†ëËéìÊ¥æÁöÑCANÊÄªÁ∫øÈÄö‰ø°&quot;&gt;&lt;code&gt;‰∏≠Êñá&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Recently I am working on A Formula E car, trying to do something with data in
the car‚Äôs CAN Bus. The very basic idea is first transmit data into a RaspberryPi.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Communication" scheme="https://leojhonsong.github.io/categories/Communication/"/>
    
    
  </entry>
  
  <entry>
    <title>Configure C/C++ Environment in VSCode</title>
    <link href="https://leojhonsong.github.io/2018/12/29/Configure-C-C-environment-in-VSCode/"/>
    <id>https://leojhonsong.github.io/2018/12/29/Configure-C-C-environment-in-VSCode/</id>
    <published>2018-12-29T18:43:32.000Z</published>
    <updated>2019-10-06T22:34:05.911Z</updated>
    
    <content type="html"><![CDATA[<div align="right">Language:<a href="/2018/12/30/Configure-C-C-environment-in-VSCode"><kbd>English</kbd></a><a href="/zh-CN/2018/12/30/ÈÖçÁΩÆVSCode‰∏≠Ë∞ÉËØïC-C-ÁéØÂ¢É"><kbd>‰∏≠Êñá</kbd></a></div><p>Here is a tutorial for configuration of VSCode to run C/C++ programs on <strong>Windows</strong>.Mainly I wrote it for my <a href="https://marketplace.visualstudio.com/items?itemName=LeoJhonSong.ccpp-extension-pack" target="_blank" rel="noopener">C/C++ Extension Pack</a><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8">üéâ</span></p><a id="more"></a><p>Actually how can we run C/C++ code in VSCode has been described clearly in<a href="https://code.visualstudio.com/docs/languages/cpp" target="_blank" rel="noopener">the C++ part of VSCode document</a>,here is just my personal understanding of this work and I suppose my descriptionis more friendly with beginners <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">üòÑ</span></p><ol><li><a href="#Requirements">Requirements</a><ol><li><a href="#Compiler">Compiler</a><ol><li><a href="#Installation">Installation</a></li><li><a href="#Add-to-Path">Add to Path</a></li><li><a href="#Test">Test</a></li></ol></li><li><a href="#VSCode-Extensions">VSCode Extensions</a></li></ol></li><li><a href="#Configuration-files">Configuration files</a><ol><li><a href="#IntelliSense-configuration">IntelliSense configuration</a></li><li><a href="#Compilation-configuration">Compilation configuration</a><ol><li><a href="#In-total">In total</a></li></ol></li><li><a href="#Debugger-configuration">Debugger configuration</a><ol><li><a href="#Program-to-debug">Program to debug</a></li><li><a href="#Debugger-path-and-options">Debugger path and options</a></li><li><a href="#Compile-before-launch">Compile before launch</a></li><li><a href="#In-total-1">In total</a></li></ol></li></ol></li><li><a href="#Enjoy">Enjoy</a></li></ol><h1 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h1><p>VSCode itself is just a editor, can not do things like compilation, even we addVSCode‚Äôs official extension for C/C++ called<a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools" target="_blank" rel="noopener">cpptools</a>,it does not install a compiler for us.</p><h2 id="Compiler"><a href="#Compiler" class="headerlink" title="Compiler"></a>Compiler</h2><p>So undoubtedly, our first step is to install a compiler. There are a fewchoices, the one recommended by VSCode‚Äôs document on Windows platform is <a href="https://sourceforge.net/projects/mingw-w64/" target="_blank" rel="noopener">MinGW-w64</a>.</p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/26a0.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png?v8">‚ö†</span> we have to notice that there is another thing called <a href="http://www.mingw.org/" target="_blank" rel="noopener">MinGW</a>which is different from <strong>MinGW-w64</strong>. Although <strong>MinGW</strong> also works, but thisproject hasn‚Äôt update for a while and we need more steps to install it. Inaddition, there should be a reason that VSCode document does not recommend itbut <strong>MinGW-w64</strong>.</p><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><p>after downloaded the installer we are good to start installation, there aremainly two options we have to change and leave the other options as the default:</p><ul><li>on the first page of the install wizard you are asked to choose your<code>Architecture</code>, set it to <strong>x86_64</strong> if your computer is 64-bit, set it to<strong>i386</strong> if your computer is 32-bit.</li><li>you can install it to where ever you want but make sure you can find it later,since we have to add it to <strong>Path</strong> manually after the installation.</li></ul><h3 id="Add-to-Path"><a href="#Add-to-Path" class="headerlink" title="Add to Path"></a>Add to Path</h3><p>After the installation we have to add our compiler to the <strong>Path</strong> so that itcan be called from the command line / powershell. (this is actually how VSCodecalls the compiler)</p><p>But what path to add?</p><p>The path add to the <strong>Path</strong> is actually the folder path of the executable fileof the application we want to call. For example I installed MinGW-w64 to<strong>D:\Softwares\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0</strong>, then I should add<strong>D:\Softwares\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin</strong> to the<strong>Path</strong>. You can see the two applications we are going to call, <code>gcc.exe</code> and<code>gdb.exe</code> are exactly there <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/270c.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/270c.png?v8">‚úå</span></p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">üîó</span> If you are no sure how to add something to the <strong>Path</strong>,<a href="https://www.architectryan.com/2018/03/17/add-to-the-path-on-windows-10/" target="_blank" rel="noopener">this</a>may helps you <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png?v8">üëç</span></p><h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><p>Now! We can test if we successfully add the compiler to the <strong>Path</strong> by typing <code>gcc</code> in the cmd.</p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2714.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png?v8">‚úî</span> What we should see is:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\LeoJh&gt;gcc</span><br><span class="line">gcc: fatal error: no input files</span><br><span class="line">compilation terminated.</span><br></pre></td></tr></tbody></table></figure><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/274c.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png?v8">‚ùå</span> What we should not see is:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">`gcc`is not recognized as an internal or external command,</span><br><span class="line">operable program or batch file.</span><br></pre></td></tr></tbody></table></figure><p>Which means you may have added wrong path to <strong>Path</strong>.</p><h2 id="VSCode-Extensions"><a href="#VSCode-Extensions" class="headerlink" title="VSCode Extensions"></a>VSCode Extensions</h2><p>We are not far from completion as we have successfully get our compiler ready:smile: Actually we are now able to develop C/C++ code! (Although it may seemshardcore) Don‚Äôt believe? Open cmd and get into te folder where you have a pieceof C/C++ code to test, type <code>gcc test.c</code> or <code>gcc test.cpp</code> and you will find a<strong>a.exe</strong> is generated in the current folder. This is exactly the executablefile we just compiled!</p><p>But this does not feels good, so we use extensions in VSCode to improve thesituation.</p><p>I recommend my<a href="https://marketplace.visualstudio.com/items?itemName=LeoJhonSong.ccpp-extension-pack" target="_blank" rel="noopener">C/C++ Extension Pack</a>since it includes only a few but really useful tools.</p><h1 id="Configuration-files"><a href="#Configuration-files" class="headerlink" title="Configuration files"></a>Configuration files</h1><p>In some tutorials it is said that we have to generate <code>c_cpp_properties.json</code>,<code>tasks.json</code>, <code>launch.json</code> three files, but the situation has changed! :tada:<code>c_cpp_properties.json</code> has been totally replaced by settings in<code>settings.json</code>. The advantage is that we can set different values for differentworkspace. Also, you will later see that configuring <code>tasks.json</code> and<code>launch.json</code> becomes REALLY easy too!</p><p>:link: click<a href="https://github.com/Microsoft/vscode-cpptools/blob/master/Documentation/LanguageServer/Customizing%20Default%20Settings.md" target="_blank" rel="noopener">here</a>to learn more about what has been replaced by <code>settings.json</code> in<code>c_cpp_properties.json</code>.</p><p>:link: click<a href="https://github.com/Microsoft/vscode-cpptools/blob/master/Documentation/LanguageServer/c_cpp_properties.json.md" target="_blank" rel="noopener">here</a>to learn more about what could have been set in <code>c_cpp_properties.json</code>.</p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/26a0.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png?v8">‚ö†</span> the following configuration uses my settings as an example.</p><h2 id="IntelliSense-configuration"><a href="#IntelliSense-configuration" class="headerlink" title="IntelliSense configuration"></a>IntelliSense configuration</h2><p>As mentioned above, we are able to develop C/C++ without VSCode, so, from mypoint of view, IntelliSense which provides us with smart suggestions is a veryimportant part of language support for C/C++ in VSCode. We could configure theIntelliSense by editing <code>settings.json</code>. The most useful ones are:</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">"C_Cpp.autocomplete": "Default",</span><br><span class="line">"C_Cpp.clang_format_style": "{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4 }",</span><br><span class="line">"C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4 }",</span><br><span class="line">"C_Cpp.default.compilerPath": "D:\\Softwares\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0\\mingw64\\bin\\gcc.exe",</span><br><span class="line">"C_Cpp.default.cStandard": "c99",</span><br><span class="line">"C_Cpp.default.cppStandard": "c++11",</span><br><span class="line">"C_Cpp.default.intelliSenseMode": "gcc-x64",</span><br><span class="line">"C_Cpp.intelliSenseEngine": "Default",</span><br><span class="line">"C_Cpp.errorSquiggles": "Enabled",</span><br></pre></td></tr></tbody></table></figure><p>the segments <strong>C_Cpp.clang_format_style</strong> and<strong>C_Cpp.clang_format_fallbackStyle</strong> specify the format style of how VSC formatC/C++ code. The above value makes a code style similar to C/C++ code style in<strong>Visual Studio</strong>. If you prefer <strong>Google Style</strong>, the following piece is whatyou need.</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">"C_Cpp.clang_format_style": "{BasedOnStyleStyle: Google, IndentWidth: 4}",</span><br><span class="line">"C_Cpp.clang_format_fallbackStyle": "{BasedOnStyleStyle: Google, IndentWidth: 4}",</span><br></pre></td></tr></tbody></table></figure><p>üåü In latest VSC, things becomes REALLY easy. You can learn how to generate<code>tasks.json</code> and <code>launch.json</code> simply by this gif üëá</p><p><img src="Configure-C-C-environment-in-VSCode/example.gif" alt=""></p><p>üí° This gif is recorded under Linux system (Ubuntu).</p><p>Following are some explanations of <code>tasks.json</code> and <code>launch.json</code>.</p><h2 id="Compilation-configuration"><a href="#Compilation-configuration" class="headerlink" title="Compilation configuration"></a>Compilation configuration</h2><p>Then we generate the <code>tasks.json</code> to help us compile the code.</p><p>‚úîÔ∏è <code>tasks.json</code> and <code>launch.json</code> are prepared for specificpiece of code as different programs may require different configurations. But ifmost of your code shares the same configuration, you can put your <code>tasks.json</code>and <code>launch.json</code> in the parent folder of all the programs. If a few programsamong them require specific configuration, you can generate another <code>tasks.json</code>and <code>launch.json</code> in its folder.</p><p>After you have generate a <code>tasks.json</code> following the instruction in VSCode‚Äôs document,add the following task to the <strong>tasks</strong> list:</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">   <span class="attr">"label"</span>: <span class="string">"Compile"</span>,</span><br><span class="line">   <span class="attr">"type"</span>: <span class="string">"shell"</span>,</span><br><span class="line">   <span class="attr">"command"</span>: <span class="string">"gcc"</span>,</span><br><span class="line">   <span class="attr">"args"</span>: [</span><br><span class="line">         <span class="string">"${file}"</span>,</span><br><span class="line">         <span class="string">"-o"</span>,</span><br><span class="line">         <span class="string">"${fileDirname}/${fileBasenameNoExtension}.exe"</span>,</span><br><span class="line">         <span class="string">"-g"</span>,</span><br><span class="line">         <span class="string">"-Wall"</span>,</span><br><span class="line">         <span class="string">"-std=c++17"</span></span><br><span class="line">   ],</span><br><span class="line">   <span class="attr">"group"</span>: {</span><br><span class="line">         <span class="attr">"kind"</span>: <span class="string">"build"</span>,</span><br><span class="line">         <span class="attr">"isDefault"</span>: <span class="literal">true</span></span><br><span class="line">   }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>label</code> is the name of this task, it will be <a href="#Copile-before-launch">used later</a>.</p><p>From this we can see that every time we call this task it actually inputs thefollowing command to shell:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc ${file} -o ${fileDirname}/${fileBasenameNoExtension}.exe -g -Wall -std=c++17</span><br></pre></td></tr></tbody></table></figure><p>Things like ${file}, ${fileDirname} are actually<a href="https://code.visualstudio.com/docs/editor/variables-reference" target="_blank" rel="noopener">variables defined by VSCode</a>.</p><p>And the <code>-o</code> option allows us to specify the name of output file.</p><p>The settings about <strong>group</strong> allow us to call this task by shortcut<code>Ctrl+shift+B</code>. check <a href="https://code.visualstudio.com/docs/editor/tasks#_typescript-hello-world" target="_blank" rel="noopener">this</a>for more details.</p><h3 id="In-total"><a href="#In-total" class="headerlink" title="In total"></a>In total</h3><p>So in total my <code>tasks.json</code> looks like this:</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    // See https://go.microsoft.com/fwlink/?LinkId=733558</span><br><span class="line">    // for the documentation about the tasks.json format</span><br><span class="line">    "version": "2.0.0",</span><br><span class="line">    "tasks": [</span><br><span class="line">        {</span><br><span class="line">            <span class="attr">"label"</span>: <span class="string">"Compile"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"shell"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"gcc"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"${file}"</span>,</span><br><span class="line">                <span class="string">"-o"</span>,</span><br><span class="line">                <span class="string">"${fileDirname}/${fileBasenameNoExtension}.exe"</span>,</span><br><span class="line">                <span class="string">"-g"</span>,</span><br><span class="line">                <span class="string">"-Wall"</span>,</span><br><span class="line">                <span class="string">"-std=c++17"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"group"</span>: {</span><br><span class="line">                <span class="attr">"kind"</span>: <span class="string">"build"</span>,</span><br><span class="line">                <span class="attr">"isDefault"</span>: <span class="literal">true</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    ]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="Debugger-configuration"><a href="#Debugger-configuration" class="headerlink" title="Debugger configuration"></a>Debugger configuration</h2><p>The last thing we need is <code>launch.json</code>. This is actually a easy task sinceVSCode provide us with a lot of templates, (normally I use the template <strong>(gdb)Launch</strong>) only a few options need modification:</p><h3 id="Program-to-debug"><a href="#Program-to-debug" class="headerlink" title="Program to debug"></a>Program to debug</h3><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"program": "${workspaceFolder}/a.exe"</span><br></pre></td></tr></tbody></table></figure><p><code>program</code> means the program we want to debug. If not specified, the name of theoutput file will be <strong>a.exe</strong>, so the program name is the above one. But if youhave specified the name of output file just like what I did in the <code>tasks.json</code>,you should use this:</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"program": "${workspaceFolder}/${fileBasenameNoExtension}.exe"</span><br></pre></td></tr></tbody></table></figure><h3 id="Debugger-path-and-options"><a href="#Debugger-path-and-options" class="headerlink" title="Debugger path and options"></a>Debugger path and options</h3><p>Set your debugger path simply by this:</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"miDebuggerPath": "gdb.exe"</span><br></pre></td></tr></tbody></table></figure><p>And we can easliy find out that gdb will output something useless first everytime evoked. We could use option <code>-q</code> to disable this:</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"miDebuggerArgs": "-q"</span><br></pre></td></tr></tbody></table></figure><h3 id="Compile-before-launch"><a href="#Compile-before-launch" class="headerlink" title="Compile before launch"></a>Compile before launch</h3><p>If you always forget to compile the modified code before debugging, VSCodeprovides a very useful option: <strong>preLaunchTask</strong>. We can specific this task toour task named <strong>Compile</strong>, so our code will be compiled first every time westart debugging <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png?v8">üëç</span></p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"preLaunchTask": "Compile"</span><br></pre></td></tr></tbody></table></figure><h3 id="In-total-1"><a href="#In-total-1" class="headerlink" title="In total"></a>In total</h3><p>So in total my <code>launch.json</code> look like this:</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    // Use IntelliSense to learn about possible attributes.</span><br><span class="line">    // Hover to view descriptions of existing attributes.</span><br><span class="line">    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class="line">    "version": "0.2.0",</span><br><span class="line">    "configurations": [</span><br><span class="line">        {</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"(gdb) Launch"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"cppdbg"</span>,</span><br><span class="line">            <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">            <span class="attr">"program"</span>: <span class="string">"${workspaceFolder}/${fileBasenameNoExtension}.exe"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [],</span><br><span class="line">            <span class="attr">"stopAtEntry"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">"cwd"</span>: <span class="string">"${workspaceFolder}"</span>,</span><br><span class="line">            <span class="attr">"environment"</span>: [],</span><br><span class="line">            <span class="attr">"externalConsole"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">"MIMode"</span>: <span class="string">"gdb"</span>,</span><br><span class="line">            <span class="attr">"miDebuggerPath"</span>: <span class="string">"gdb.exe"</span>,</span><br><span class="line">            <span class="attr">"miDebuggerArgs"</span>: <span class="string">"-q"</span>,</span><br><span class="line">            <span class="attr">"setupCommands"</span>: [</span><br><span class="line">                {</span><br><span class="line">                    <span class="attr">"description"</span>: <span class="string">"Enable pretty-printing for gdb"</span>,</span><br><span class="line">                    <span class="attr">"text"</span>: <span class="string">"-enable-pretty-printing"</span>,</span><br><span class="line">                    <span class="attr">"ignoreFailures"</span>: <span class="literal">true</span></span><br><span class="line">                }</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"preLaunchTask"</span>: <span class="string">"Compile"</span></span><br><span class="line">        }</span><br><span class="line">    ]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="Enjoy"><a href="#Enjoy" class="headerlink" title="Enjoy"></a>Enjoy</h1><p>Congratulations! <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8">üéâ</span> You are now able to develop C/C++ code with VSCode andhope you enjoy it!</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;right&quot;&gt;Language:
&lt;a href=&quot;/2018/12/30/Configure-C-C-environment-in-VSCode&quot;&gt;&lt;kbd&gt;English&lt;/kbd&gt;&lt;/a&gt;
&lt;a href=&quot;/zh-CN/2018/12/30/ÈÖçÁΩÆVSCode‰∏≠Ë∞ÉËØïC-C-ÁéØÂ¢É&quot;&gt;&lt;kbd&gt;‰∏≠Êñá&lt;/kbd&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Here is a tutorial for configuration of VSCode to run C/C++ programs on &lt;strong&gt;Windows&lt;/strong&gt;.
Mainly I wrote it for my &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=LeoJhonSong.ccpp-extension-pack&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;C/C++ Extension Pack&lt;/a&gt;
&lt;span class=&quot;github-emoji&quot; style=&quot;color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8) center/contain&quot; data-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8&quot;&gt;üéâ&lt;/span&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="https://leojhonsong.github.io/categories/Tools/"/>
    
    
  </entry>
  
  <entry>
    <title>When VSCode Becomes a Lifestyle</title>
    <link href="https://leojhonsong.github.io/2018/12/25/When-VSCode-Becomes-A-Lifestyle/"/>
    <id>https://leojhonsong.github.io/2018/12/25/When-VSCode-Becomes-A-Lifestyle/</id>
    <published>2018-12-25T09:08:17.000Z</published>
    <updated>2019-10-06T22:34:05.919Z</updated>
    
    <content type="html"><![CDATA[<div align="right">Language:<a href="/2018/12/25/When-VSCode-Becomes-A-Lifestyle"><kbd>English</kbd></a><a href="/zh-CN/2019/01/07/ÂΩìVSCodeÊàê‰∏∫‰∏ÄÁßçÁîüÊ¥ªÊñπÂºè"><kbd>‰∏≠Êñá</kbd></a></div><a id="more"></a><h2 id="IntelliSense-for-CSS-class-names-in-HTML"><a href="#IntelliSense-for-CSS-class-names-in-HTML" class="headerlink" title="IntelliSense for CSS class names in HTML"></a><a href="https://marketplace.visualstudio.com/items?itemName=Zignd.html-css-class-completion" target="_blank" rel="noopener">IntelliSense for CSS class names in HTML</a></h2><h2 id="rewrap"><a href="#rewrap" class="headerlink" title="rewrap"></a><a href="https://marketplace.visualstudio.com/items?itemName=stkb.rewrap" target="_blank" rel="noopener">rewrap</a></h2><h2 id="ARM"><a href="#ARM" class="headerlink" title="ARM"></a><a href="https://marketplace.visualstudio.com/items?itemName=dan-c-underwood.arm" target="_blank" rel="noopener">ARM</a></h2><h2 id="Arduino"><a href="#Arduino" class="headerlink" title="Arduino"></a><a href="https://marketplace.visualstudio.com/items?itemName=vsciot-vscode.vscode-arduino" target="_blank" rel="noopener">Arduino</a></h2><h2 id="Better-Comments"><a href="#Better-Comments" class="headerlink" title="Better Comments"></a><a href="https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments" target="_blank" rel="noopener">Better Comments</a></h2><h2 id="Markdown-All-in-One"><a href="#Markdown-All-in-One" class="headerlink" title="Markdown All in One"></a><a href="https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one" target="_blank" rel="noopener">Markdown All in One</a></h2><p>This extension includes nearly everything you need for Markdown, the only extrastuff you need are <a href="#Reflow-Markdown">Reflow Markdown</a> and <a href="#Markdown-Emoji">Markdown Emoji</a>.</p><h2 id="Markdown-Preview-Enhanced"><a href="#Markdown-Preview-Enhanced" class="headerlink" title="Markdown Preview Enhanced"></a><a href="https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced" target="_blank" rel="noopener">Markdown Preview Enhanced</a></h2><p>This extension seems really powerful that it can do nearly everything you canimagine of about Markdown. Unfortunately it seems that it don‚Äôt support emojisby itself in preview tab either. I have not tried this extension since I havegot <code>Markdown All in One</code></p><h2 id="Reflow-Markdown"><a href="#Reflow-Markdown" class="headerlink" title="Reflow Markdown"></a><a href="https://marketplace.visualstudio.com/items?itemName=marvhen.reflow-markdown" target="_blank" rel="noopener">Reflow Markdown</a></h2><p>This extension help you to do word-wrap very smartly by simply press<code>Alt+Q</code> <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png?v8">üòç</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png?v8">üòç</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png?v8">üòç</span><br><strong>I LOVE THIS ONE!</strong></p><h2 id="Markdown-Emoji"><a href="#Markdown-Emoji" class="headerlink" title="Markdown Emoji"></a><a href="https://marketplace.visualstudio.com/items?itemName=bierner.markdown-emoji" target="_blank" rel="noopener">Markdown Emoji</a></h2><h2 id="Markdown-Preview-Mermaid-Support"><a href="#Markdown-Preview-Mermaid-Support" class="headerlink" title="Markdown Preview Mermaid Support"></a><a href="https://marketplace.visualstudio.com/items?itemName=bierner.markdown-mermaid" target="_blank" rel="noopener">Markdown Preview Mermaid Support</a></h2><!-- TODO --><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;right&quot;&gt;Language:
&lt;a href=&quot;/2018/12/25/When-VSCode-Becomes-A-Lifestyle&quot;&gt;&lt;kbd&gt;English&lt;/kbd&gt;&lt;/a&gt;
&lt;a href=&quot;/zh-CN/2019/01/07/ÂΩìVSCodeÊàê‰∏∫‰∏ÄÁßçÁîüÊ¥ªÊñπÂºè&quot;&gt;&lt;kbd&gt;‰∏≠Êñá&lt;/kbd&gt;&lt;/a&gt;
&lt;/div&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="https://leojhonsong.github.io/categories/Tools/"/>
    
    
  </entry>
  
  <entry>
    <title>About My Custom Settings of My Next Theme Blog and Problem Killing</title>
    <link href="https://leojhonsong.github.io/2018/12/24/About-My-Custom-Settings-of-My-Next-Theme-Blog-and-Problem-Killing/"/>
    <id>https://leojhonsong.github.io/2018/12/24/About-My-Custom-Settings-of-My-Next-Theme-Blog-and-Problem-Killing/</id>
    <published>2018-12-24T05:30:40.000Z</published>
    <updated>2019-10-06T22:34:05.911Z</updated>
    
    <content type="html"><![CDATA[<div align="right">Language:<a href="/2018/12/24/About-My-Custom-Settings-of-My-Next-Theme-Blog-and-Problem-Killing"><kbd>English</kbd></a><a href="/zh-CN/2019/01/07/ÂÖ≥‰∫éÊàëÁöÑNexT‰∏ªÈ¢òÂçöÂÆ¢ÁöÑ‰∏™ÊÄßÂåñÈÖçÁΩÆ‰ª•ÂèäÈÅáÂà∞ÁöÑ‰∏Ä‰∫õÈóÆÈ¢ò"><kbd>‰∏≠Êñá</kbd></a></div><p>This blog site is powered by <a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a>, the theme is <a href="https://theme-next.org/" target="_blank" rel="noopener">NexT</a>,the scheme is <code>Pisces</code>. After I started building my blog with Hexo, I found thatactually there are some more Static Site Generators which are considered betterthan Hexo. You can find a ranking list of the Static Site Generators <a href="https://www.staticgen.com/" target="_blank" rel="noopener">here</a>.(But if you have already get started with Hexo, it is O.K. At least I think itis good enough)</p><a id="more"></a><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/26a0.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png?v8">‚ö†</span> the generator named Next in the list is a different thing from thetheme of Hexo I use.</p><blockquote><p>Here I want to share about the problems I meet and my custom settings.</p></blockquote><!-- More --><h2 id="Problems-I-met"><a href="#Problems-I-met" class="headerlink" title="Problems I met"></a>Problems I met</h2><h3 id="GitHub-Pages-says-I-am-using-a-unsupported-theme"><a href="#GitHub-Pages-says-I-am-using-a-unsupported-theme" class="headerlink" title="GitHub Pages says I am using a unsupported theme"></a>GitHub Pages says I am using a unsupported theme</h3><p><strong>This problem is very likely to occur if you simply commit your whole Hexoinstance to your master branch.</strong></p><p>In fact, only <a href="https://help.github.com/articles/adding-a-jekyll-theme-to-your-github-pages-site-with-the-jekyll-theme-chooser/" target="_blank" rel="noopener">a few themes</a>are supported by GitHub Pages and NexT or any Hexo theme is not included<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png?v8">ü§¶‚ôÇ</span>But here is a little trick: the files are rendered at yourdesktop, simple HTML pages are uploaded to the master branch as the source codeof your site. In this way, anytheme can be applied to your blog<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">üòÑ</span></p><p>Therefore, you can not simply commit your Hexo instance to the master branch,what I did is to publish a new branch <code>Root</code> to store my Hexo instance and usethe <a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a>extension to deploy my site to the master branch.</p><p>:warning:your GitHub Pages<a href="https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/" target="_blank" rel="noopener">can only published from the master branch</a>if your repository is named <code>username.github.io</code></p><p>If you haven‚Äôt installed thisplugin, use the following command at the root of your hexo instance.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></tbody></table></figure><p>check <a href="https://hexo.io/docs/deployment.html#Git" target="_blank" rel="noopener">here</a> for the configuration.</p><h3 id="Cannot-commit-theme-next-to-github"><a href="#Cannot-commit-theme-next-to-github" class="headerlink" title="Cannot commit theme/next to github"></a>Cannot commit theme/next to github</h3><p>Here is the issue: <a href="https://github.com/iissnan/hexo-theme-next/issues/932" target="_blank" rel="noopener">#932</a><a href="https://github.com/iissnan/hexo-theme-next/issues/328" target="_blank" rel="noopener">#328</a></p><p>Therefore you cannot backup your theme simply committing it to github since itis a subproject. Although a cool solution is provided in <code>#328</code>, it cannot solvemy problem since I did further customization. But I did not try the solution<strong>fork+submodule</strong> mentioned in <code>#932</code>. I simply deleted files declaring itsidentity of a subproject so the theme folder becomes totally a part of my hexoinstance.<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png?v8">ü§¶‚ôÇ</span> You just need to left these files:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">‚îú‚îÄ‚îÄlanguages</span><br><span class="line">‚îú‚îÄ‚îÄlayout</span><br><span class="line">‚îú‚îÄ‚îÄscripts</span><br><span class="line">‚îú‚îÄ‚îÄ<span class="built_in">source</span></span><br><span class="line">‚îú‚îÄ‚îÄ_config.yml</span><br><span class="line">‚îî‚îÄ‚îÄpackage.json</span><br></pre></td></tr></tbody></table></figure><p>You can also change the theme‚Äôs name from <code>next</code> towhatever else, for example <code>LeoJhonSong</code>:smile:. According to <a href="https://hexo.io/docs/themes" target="_blank" rel="noopener">Hexo</a>,you have to then modify the theme setting in your site‚Äôs <code>_config.yml</code>, assigningthe name of your theme folder to it.</p><h3 id="Pages-do-not-change-after-modification"><a href="#Pages-do-not-change-after-modification" class="headerlink" title="Pages do not change after modification"></a>Pages do not change after modification</h3><p>the issue could be separated in to two situations.</p><h4 id="The-modification-works-on-local-server"><a href="#The-modification-works-on-local-server" class="headerlink" title="The modification works on local server"></a>The modification works on local server</h4><p>the reason may be:</p><ul><li>sometimes your modification will be ignored if you do not run <code>hexo clean</code> todelete the cache file (<strong>db.json</strong>)</li><li>your setting is not first <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity" target="_blank" rel="noopener">priority</a> in CSS in all probability, the value isoverwritten somewhere else</li></ul><p>check if the attributes you changed is valid by<a href="https://developers.google.com/web/tools/chrome-devtools/css/" target="_blank" rel="noopener">Chrome DevTools</a>.The invalid attributes will look like this: <del>color: #fff</del></p><ul><li>you can specific the class name of the item to rise the priority of yuor customattribute.</li><li>another way is to use<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity#The_!important_exception" target="_blank" rel="noopener">!important</a>to force priority to rise. for example, <code>color: #fff !important</code>. It is oftennot recommanded since it ruins existing CSS and may cause difficulty whendebugging. In addition, there is still a low risk it is not raised to firstpriority <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f605.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f605.png?v8">üòÖ</span> as examples are given <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity#The_!important_exception" target="_blank" rel="noopener">here</a></li></ul><h4 id="The-modification-even-does-not-work-on-local-server-man-facepalming"><a href="#The-modification-even-does-not-work-on-local-server-man-facepalming" class="headerlink" title="The modification even does not work on local server:man_facepalming:"></a>The modification even does not work on local server<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png?v8">ü§¶‚ôÇ</span></h4><p>The reason could be:</p><ul><li>your browser uses the cache data of the GitHub Page instead of reloading it</li><li>there is grammar mistakes in your modification</li></ul><p>The solution could be:</p><ul><li><code>Ctrl + F5</code> or <code>Ctrl + Fn + F5</code> to force the browser to refresh the page</li><li>check the generation information to see if there is an error or run <code>hexo s</code>to run the site locally to see if something goes wrong</li></ul><h3 id="Cannot-show-emoji"><a href="#Cannot-show-emoji" class="headerlink" title="Cannot show emoji"></a>Cannot show emoji</h3><p>add <a href="https://www.npmjs.com/package/hexo-filter-github-emojis" target="_blank" rel="noopener">hexo-filter-github-emojis</a>and then you can use Emojis as you want just like me.<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/270c.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/270c.png?v8">‚úå</span></p><p>if you want to type a emoji but you have no idea what its shortcut is,you could go to <a href="https://emojipedia.org/" target="_blank" rel="noopener">emojipedia</a> for help.</p><h3 id="Will-line-feed-whenever-there-is-a-return-in-the-markdown-file"><a href="#Will-line-feed-whenever-there-is-a-return-in-the-markdown-file" class="headerlink" title="Will line feed whenever there is a return in the markdown file"></a>Will line feed whenever there is a return in the markdown file</h3><p>Actually this issue is mentioned in <a href="https://github.com/iissnan/hexo-theme-next/issues/1672" target="_blank" rel="noopener">github</a>.</p><p>this happened to me because I uninstalled <code>hexo-renderer-marked</code> and installed<code>hexo-renderer-markdown-it</code> since the <strong>markdown-it</strong> markdown parser has <a href="https://www.npmjs.com/search?q=markdown-it" target="_blank" rel="noopener">plenty of plugins</a><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png?v8">ü§¶‚ôÇ</span>.</p><h3 id="Sitemap-error"><a href="#Sitemap-error" class="headerlink" title="Sitemap error"></a>Sitemap error</h3><p>Google Search Console may tells you that there is errors in your site if you didnot changed your site‚Äôs url from <code>http://yoursite.com</code> to <code>your own root url</code> inyour site‚Äôs <code>_config.yml</code>‚Ä¶</p><h3 id="Error-word-count"><a href="#Error-word-count" class="headerlink" title="Error word-count"></a>Error word-count</h3><p>It had been mentioned <a href="https://github.com/theme-next/hexo-symbols-count-time/issues/17" target="_blank" rel="noopener">here</a>.</p><p>I enabled word count provided by Hexo but the count is definitely larger than itshould be. But that is not a problem, it can be seen as a decoration<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f648.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f648.png?v8">üôà</span></p><h2 id="My-custom-settings"><a href="#My-custom-settings" class="headerlink" title="My custom settings"></a>My custom settings</h2><p>I am proud of <strong>some</strong> settings because I tried and achieved it by myself, despitefrom simply copying others‚Äô code. <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f61d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61d.png?v8">üòù</span></p><h3 id="Commit-site-to-Google"><a href="#Commit-site-to-Google" class="headerlink" title="Commit site to Google"></a>Commit site to Google</h3><p>Unfortunately, Baidu crawler is blocked by GitHub because<a href="https://www.netresec.com/?month=2015-03&amp;page=Blog&amp;post=China%27s-Man-on-the-Side-Attack-on-GitHub" target="_blank" rel="noopener">Baidu has been used to attack GitHub</a>.Actually poor Baidu did not mean to do this‚Ä¶ But to be honest, Baidu isnot a lovely search engine since it puts <strong>plenty</strong> of ads in its searchresults<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f644.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f644.png?v8">üôÑ</span>. So I won‚Äôt bother solving the issue that Baidu con not findmy blog. Besides, this blog is mainly wrote for myself<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/270c.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/270c.png?v8">‚úå</span>.</p><ol><li><p>install <a href="https://github.com/hexojs/hexo-generator-sitemap" target="_blank" rel="noopener">hexo-generator-sitemap</a></p></li><li><p>go to <a href="https://search.google.com/search-console/about" target="_blank" rel="noopener">Google Search Console</a>and add your site.verify it by <code>HTML tag</code>. There you get a &lt;meta&gt; tag like this:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"google-site-verification"</span> <span class="attr">content</span>=<span class="string">"blablablablablabla"</span> /&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>the <code>content</code> is your verification code.</p></li><li><p>add following code to your site‚Äôs <code>_config.yml</code>:</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sitemap:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">sitemap.xml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">google_site_verification:</span> <span class="string">your</span> <span class="string">code</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>run the following code:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></tbody></table></figure><p>now your site should have be added the verification tag.</p></li><li><p>go back to google search console and commit your sitemap. Your sitemap shouldbe named <code>sitemap.xml</code>.</p></li><li><p>DONE!</p></li></ol><h3 id="Multi-Language"><a href="#Multi-Language" class="headerlink" title="Multi-Language"></a>Multi-Language</h3><blockquote><p>This part! Guys, this is my proud since I worked out my own solution.My work is based on <a href="http://kvh.io/en/hexo-nginx-multi-lingual.html" target="_blank" rel="noopener">this</a>and <a href="https://bambooom.github.io/2018/03/08/hexo-multi-lang/" target="_blank" rel="noopener">this</a></p></blockquote><p>It is described very clearly in <strong>Keep Velocity High</strong>‚Äòs post that amultilingual blog implemented with current tools is not good enough. He‚Äôs ideaof running two isolated blog is a good try and thanks to his great work I don‚Äôthave to do those works again. But just as the second post pointed out, itbecomes <strong>too hassle</strong> that we have to run two independent site if we just wantour site could be shown in more than one language. As a individual blogger I donot have that much time to maintain my blog. <strong>I have to run three sites, if Iwant it can be shown in Chinese, English and Japanese!</strong> In addition, if we wantto change the style of the blog, we have to repeat the work for eachlanguage<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f628.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f628.png?v8">üò®</span>.</p><p>The solution mentioned in the second post is also very smart, but there is stillsome problems.</p><ol><li><p>His idea of deploy two site to one repository is impossible since arepository can only have one home page.<br>In addition, you need a repository named <code>zh-CN</code> if you want your chinesesite‚Äôs root url is <code>https://yourname.github.io/zh-CN</code></p></li><li><p>it definitely waste a lot of time if we have to copy the markdown files tothe source folder every time we generate the public folder.</p></li></ol><p>As we can see, most multilingual site will give each site a different root url.Therefore, I decided to use <a href="https://leojhonsong.github.io">https://leojhonsong.github.io</a> to be the home of myenglish site and <a href="https://leojhonsong.github.io/zh-CN">https://leojhonsong.github.io/zh-CN</a> for Chinese site. That isto say, I need a repository called <a href="https://github.com/LeoJhonSong/LeoJhonSong.github.io" target="_blank" rel="noopener">leojhonsong.github.io</a>and a repository called <a href="https://github.com/LeoJhonSong/zh-CN" target="_blank" rel="noopener">zh-CN</a> for myblog.</p><p>Things are simple until now, but <strong>here is the trick</strong>: since hexo allows us toadd<a href="https://hexo.io/docs/configuration#Using-an-Alternate-Config" target="_blank" rel="noopener">alternate config</a>,we use the site‚Äôs <code>_config.yml</code> for settings of the english site as well as thebasic settings of the blog and create <code>_config.zh-CN.yml</code> for settings ofChinese site that differs from english site to override settings in<code>_config.yml</code>. There, we are able to set different source folder path, publicfolder path for each language and even different repository to deploy the site<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">üòÑ</span></p><p>The following code are my settings.</p><p>in <code>_config.yml</code>:</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">https://leojhonsong.github.io/</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source/en</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public/en</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">LeoJhonSong</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">git@github.com:LeoJhonSong/LeoJhonSong.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></tbody></table></figure><p>in <code>_config.zh-CN.yml</code>:</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">https://leojhonsong.github.io/zh-CN</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/zh-CN</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source/zh-CN</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public/zh-CN</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">git@github.com:LeoJhonSong/zh-CN.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></tbody></table></figure><p>Then after generation your directory should look like this:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">‚îú‚îÄ‚îÄ.deploy_git</span><br><span class="line">‚îú‚îÄ‚îÄnode_modules</span><br><span class="line">‚îú‚îÄ‚îÄpublic</span><br><span class="line">‚îÇ       ‚îú‚îÄen</span><br><span class="line">‚îÇ       ‚îî‚îÄzh-CN</span><br><span class="line">‚îú‚îÄ‚îÄscaffolds</span><br><span class="line">‚îú‚îÄ‚îÄ<span class="built_in">source</span></span><br><span class="line">‚îÇ       ‚îú‚îÄen</span><br><span class="line">‚îÇ       ‚îî‚îÄzh-CN</span><br><span class="line">‚îú‚îÄ‚îÄthemes</span><br><span class="line">‚îú‚îÄ‚îÄ_config.yml</span><br><span class="line">‚îú‚îÄ‚îÄ_config.zh-CN.yml</span><br><span class="line">‚îú‚îÄ‚îÄ_multiconfig.yml</span><br><span class="line">‚îú‚îÄ‚îÄdb.json</span><br><span class="line">‚îú‚îÄ‚îÄdebug.log</span><br><span class="line">‚îú‚îÄ‚îÄLICENSE</span><br><span class="line">‚îú‚îÄ‚îÄpackage-lock.json</span><br><span class="line">‚îî‚îÄ‚îÄpackage.json</span><br></pre></td></tr></tbody></table></figure><p>By this method, you can easily set up a multilingual blog!</p><p>:warning: notice that <code>db.json</code> is the cache file for generation, that is tosay, if you generate the files for Chinese site right after generating files forEnglish site, the English files will be mixed into <strong>public/zh-CN</strong>, which isannoying. So you should run <code>hexo clean</code> to delete <code>db.json</code> every time beforegenerating files for <strong>different language</strong>.</p><p>We can also write a batch script and python script to shorten the commands.</p><p>put <code>a.bat</code> in the root directory:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">:: g <span class="keyword">for</span> generate, d <span class="keyword">for</span> deploy, e <span class="keyword">for</span> English, c <span class="keyword">for</span> Chinese, nc <span class="keyword">for</span> new</span><br><span class="line">:: Chinese post, ne <span class="keyword">for</span> new English post, n <span class="keyword">for</span> new post of all language</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">"%1"</span>==<span class="string">""</span> goto generateDeployAll</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%1"</span>==<span class="string">"g"</span> goto generateAll</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%1"</span>==<span class="string">"d"</span> goto deployAll</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%1"</span>==<span class="string">"e"</span> goto english</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%1"</span>==<span class="string">"c"</span> goto chinese</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%1"</span>==<span class="string">"ne"</span> hexo new %2</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%1"</span>==<span class="string">"nc"</span> hexo new %2 --config _config.yml,_config.zh-CN.yml</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%1"</span>==<span class="string">"na"</span> hexo new %2 &amp;&amp; hexo new %3 --config _config.yml,_config.zh-CN.yml &amp;&amp; multi-language.py %2 %3</span><br><span class="line">goto end</span><br><span class="line"></span><br><span class="line">:generateDeployAll</span><br><span class="line">hexo clean &amp;&amp; hexo d -g &amp;&amp; hexo clean --config _config.yml,_config.zh-CN.yml &amp;&amp; hexo d -g --config _config.yml,_config.zh-CN.yml</span><br><span class="line">goto end</span><br><span class="line"></span><br><span class="line">:generateAll</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo clean --config _config.yml,_config.zh-CN.yml &amp;&amp; hexo g --config _config.yml,_config.zh-CN.yml</span><br><span class="line">goto end</span><br><span class="line"></span><br><span class="line">:deployAll</span><br><span class="line">hexo d &amp;&amp; hexo d --config _config.yml,_config.zh-CN.ymlhexo</span><br><span class="line">goto end</span><br><span class="line"></span><br><span class="line">:english</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%2"</span>==<span class="string">""</span> goto generateDeployEnglish</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%2"</span>==<span class="string">"g"</span> goto generateEnglish</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%2"</span>==<span class="string">"d"</span> goto deployEnglish</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%2"</span>==<span class="string">"s"</span> goto serverEnglish</span><br><span class="line">goto end</span><br><span class="line"></span><br><span class="line">:generateDeployEnglish</span><br><span class="line">hexo clean &amp;&amp; hexo d -g</span><br><span class="line">goto end</span><br><span class="line"></span><br><span class="line">:generateEnglish</span><br><span class="line">hexo clean &amp;&amp; hexo g</span><br><span class="line">goto end</span><br><span class="line"></span><br><span class="line">:deployEnglish</span><br><span class="line">hexo d</span><br><span class="line">goto end</span><br><span class="line"></span><br><span class="line">:serverEnglish</span><br><span class="line">start hexo server</span><br><span class="line">start http://localhost:4000</span><br><span class="line">goto end</span><br><span class="line"></span><br><span class="line">:chinese</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%2"</span>==<span class="string">""</span> goto generateDeployChinese</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%2"</span>==<span class="string">"g"</span> goto generateChinese</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%2"</span>==<span class="string">"d"</span> goto deployChinese</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%2"</span>==<span class="string">"s"</span> goto serverChinese</span><br><span class="line">goto end</span><br><span class="line"></span><br><span class="line">:generateDeployChinese</span><br><span class="line">hexo clean --config _config.yml,_config.zh-CN.yml &amp;&amp; hexo d -g --config _config.yml,_config.zh-CN.yml</span><br><span class="line">goto end</span><br><span class="line"></span><br><span class="line">:generateChinese</span><br><span class="line">hexo clean --config _config.yml,_config.zh-CN.yml &amp;&amp; hexo g --config _config.yml,_config.zh-CN.yml</span><br><span class="line">goto end</span><br><span class="line"></span><br><span class="line">:deployChinese</span><br><span class="line">hexo d --config _config.yml,_config.zh-CN.yml</span><br><span class="line">goto end</span><br><span class="line"></span><br><span class="line">:serverChinese</span><br><span class="line">start http://localhost:4000</span><br><span class="line">start hexo server --config _config.yml,_config.zh-CN.yml</span><br><span class="line"></span><br><span class="line">goto end</span><br><span class="line"></span><br><span class="line">:end</span><br></pre></td></tr></tbody></table></figure><p>put <code>multi-language.py</code> in the root directory:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">filter</span><span class="params">(filename)</span>:</span></span><br><span class="line">        filename = filename.replace(<span class="string">' '</span>, <span class="string">'-'</span>)</span><br><span class="line">        filename = filename = re.sub(<span class="string">r'[+/?#$%]'</span>, <span class="string">""</span>, filename)</span><br><span class="line">        <span class="keyword">return</span> filename</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">englishName = filter(sys.argv[<span class="number">1</span>])</span><br><span class="line">chineseName = filter(sys.argv[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">englishFile = <span class="string">'source/en/_posts/'</span> + englishName + <span class="string">'.md'</span></span><br><span class="line">chineseFile = <span class="string">'source/zh-CN/_posts/'</span> + chineseName + <span class="string">'.md'</span></span><br><span class="line">Files = [englishFile, chineseFile]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> filepath <span class="keyword">in</span> Files:</span><br><span class="line">        <span class="keyword">with</span> open(filepath, <span class="string">'a'</span>) <span class="keyword">as</span> post:</span><br><span class="line">                post.write(<span class="string">"\n"</span>)</span><br><span class="line">                post.write(<span class="string">"&lt;div align='right'&gt;Language:\n"</span>)</span><br><span class="line">                post.write(<span class="string">"\t&lt;a href='{{ location.host }}/"</span>+englishName+<span class="string">"'&gt;&lt;code&gt;English&lt;/code&gt;&lt;/a&gt;\n"</span>)</span><br><span class="line">                post.write(<span class="string">"\t&lt;a href='{{ location.host }}/zh-CN/"</span>+chineseName.decode(<span class="string">'gbk'</span>).encode(<span class="string">'utf-8'</span>)+<span class="string">"'&gt;&lt;code&gt;‰∏≠Êñá&lt;/code&gt;&lt;/a&gt;\n"</span>)</span><br><span class="line">                post.write(<span class="string">"&lt;/div&gt;"</span>)</span><br><span class="line">                post.write(<span class="string">"\n"</span>)</span><br></pre></td></tr></tbody></table></figure><p>These will make things much easier. You just need to put these two file in theroot of your hexo instance and you are good to go. <strong>%1, %2</strong> in the code arethe parameters passed to the batch. For example, you can type <code>a c g</code> in cmd inthe root of your hexo instance to generate the Chinese files. <strong>a</strong> is te nameof my batch file as I named it <strong>a.bat</strong> but of course you can change it to wantever you want. By the way, the file name is also a parameter passed to the batchfile, <strong>%0</strong>. <strong>c</strong> is the second parameter (<strong>%1</strong>) passed to the batch and<strong>g</strong> is <strong>%2</strong>. It is interesting that the parameter‚Äôs value could be null,that is to say, if you simply type <code>a</code>, the English files will be generated anddeployed then Chinese files will be generated and deployed. The commands <code>a ne</code>,<code>a nc</code>, <code>a na</code> are used to generate new post.But the best part is that thecommand <code>a na</code> will call the <strong>multi-language.py</strong> to write HTML code to linkthe Chinese post and the corresponding English post. For example, if you want tonew a English post named <strong>Hello World</strong> and its Chinese version <strong>‰Ω†Â•Ω‰∏ñÁïå</strong>, thecommand should be <code>a na 'Hello World' '‰Ω†Â•Ω‰∏ñÁïå'</code></p><h3 id="Categories-About-page"><a href="#Categories-About-page" class="headerlink" title="Categories, About page"></a>Categories, About page</h3><p>Reference <a href="https://theme-next.org/docs/getting-started/#Configuring-Menu-Items" target="_blank" rel="noopener">here</a></p><h3 id="Search"><a href="#Search" class="headerlink" title="Search"></a>Search</h3><ol><li><p>install the dependencies <a href="https://github.com/theme-next/hexo-generator-searchdb" target="_blank" rel="noopener">hexo-generator-searchdb</a>and <a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a>by:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search  --save</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></tbody></table></figure></li><li><p>configure settings for <strong>hexo-generator-search</strong> in <strong>site</strong>‚Äòs <code>_config.yml</code>:</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">  format:</span> <span class="string">html</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">10000</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>configure settings for <strong>hexo-generator-searchdb</strong> in <strong>theme</strong>‚Äòs <code>_config.yml</code>:</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  trigger:</span> <span class="string">auto</span></span><br><span class="line"><span class="attr">  top_n_per_article:</span> <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure></li></ol><h3 id="Better-response-for-mobile-devices"><a href="#Better-response-for-mobile-devices" class="headerlink" title="Better response for mobile devices"></a>Better response for mobile devices</h3><p>In <code>themes/next/source/css/_custom/custom.styl</code>:</p><figure class="highlight styl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@media (<span class="attribute">max-width</span>: <span class="number">425px</span>){</span><br><span class="line">    <span class="selector-class">.site-title</span> {</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">6vw</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="selector-class">.content-wrap</span> {</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">10px</span> !important;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">@media (<span class="attribute">max-width</span>: <span class="number">767px</span>){</span><br><span class="line">    <span class="selector-class">.posts-expand</span> {</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0px</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Custom-colors"><a href="#Custom-colors" class="headerlink" title="Custom colors"></a>Custom colors</h3><blockquote><p>To customize the background colors of your site, I recommend <a href="http://nipponcolors.com/" target="_blank" rel="noopener">this site</a>to you as it provides a lot of cool colors.</p></blockquote><p>Things could be quite simply as most colors can be reset using variables in<code>themes/next/css/_variables/base.styl</code> and<code>themes/next/css/_variables/YourScheme.styl</code>. You can preview your custom settingsutilizing developer tools of your browser.(<a href="https://developers.google.com/web/tools/chrome-devtools/css/#declarations" target="_blank" rel="noopener">Here</a>is how we do this in Chrome DevTools.) After decided your custom settings, youreassign the variables which had been defined in the two yml files mentionedabove in <code>themes/next/css/_variables/custom.styl</code>.</p><p>:warning: you have to noticethat only if your reassignments are in <code>themes/next/css/_variables/custom.styl</code>will they take effect. They are <strong>invalid</strong> if they are put in<code>themes/next/source/css/_custom/custom.styl</code>. Similarly, any other setting not related to the variables should be written in <code>themes/next/source/css/_custom/custom.styl</code>.</p><p>you could find <a href="#My-custom.styl">my custom.styl</a> at the end.</p><h3 id="Colorful-icons-for-social-links-in-sidebar"><a href="#Colorful-icons-for-social-links-in-sidebar" class="headerlink" title="Colorful icons for social links in sidebar"></a>Colorful icons for social links in sidebar</h3><p>As I see it, the single color font icons used by NexT are a little bit dual. Inaddition, fontawsome does not have some icons I want.</p><p>So I use icons from <a href="https://www.iconfont.cn/" target="_blank" rel="noopener">iconfont</a> instead. This site even provides <strong>colorful font icons</strong>!</p><ol><li><p>in <code>themes/next/layout/_macro/sidebar.swig</code>:</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% set sidebarIcon = '&lt;i class="fa fa-fw fa-' + link.split('||')[1] | trim | default('globe') + '"&gt;&lt;/i&gt;' %}</span><br></pre></td></tr></tbody></table></figure><p>comment out but not delete <code>line 108</code>(the line above) by replacing it withthe following line, in case one day you want it back. Then we add a line touse font icons from iconfont.</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">{# % set sidebarIcon = '&lt;i class="fa fa-fw fa-' + link.split('||')[1] | trim | default('globe') + '"&gt;&lt;/i&gt;' % #}</span><br><span class="line">{% set sidebarIcon = '&lt;svg class="icon" aria-hidden="true"&gt;&lt;use xlink:href="#' + link.split('||')[1] | trim + '"&gt;&lt;/use&gt;&lt;/svg&gt;' %}</span><br></pre></td></tr></tbody></table></figure><p>Then add a line after <code>line 100</code> to import the source code of the icons:</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src="https:{{ theme.social_icons.source }}"&gt;&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure></li><li><p>create a project in <a href="https://www.iconfont.cn/" target="_blank" rel="noopener">iconfont</a> to collect icons youwant to use in your blog.</p><blockquote><p><a href="https://www.iconfont.cn/help/detail?spm=a313x.7781069.1998910419.dfd524534&amp;helptype=about" target="_blank" rel="noopener">here</a> isthe tutorial of iconfont.</p></blockquote><p>You can log in with GitHub. After added icons you like to your project,choose quote as <code>symbol</code> and <code>View the Online Link</code>, copy it and put it in  your theme‚Äôs<code>_config.yml</code> under the <strong>social_icons</strong> settings like this:</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social_icons:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  icons_only:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  transition:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  source:</span> <span class="string">//at.alicdn.com/t/font_980470_nj2qfdk05jb.js</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>simply put the code of your icons after your social links in your theme‚Äôs<code>_config.yml</code> like this:</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line"><span class="attr">  GitHub:</span> <span class="attr">https://github.com/LeoJhonSong</span> <span class="string">||</span> <span class="string">icon-github</span></span><br><span class="line"><span class="attr">  E-Mail:</span> <span class="attr">mailto:LeoJhon.Song@outlook.com</span> <span class="string">||</span> <span class="string">icon-OUTLOOK</span></span><br><span class="line">  <span class="string">FB</span> <span class="attr">Page:</span> <span class="attr">https://www.facebook.com/jhon.leo.100</span> <span class="string">||</span> <span class="string">icon-Facebook</span></span><br><span class="line"><span class="attr">  QQ:</span> <span class="attr">https://user.qzone.qq.com/719957017</span> <span class="string">||</span> <span class="string">icon-QQ</span></span><br><span class="line"><span class="attr">  WakaTime:</span> <span class="attr">https://wakatime.com/@LeoJhonSong</span> <span class="string">||</span> <span class="string">icon-waka-time</span></span><br></pre></td></tr></tbody></table></figure><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">üòÜ</span> quite easy right?</p></li></ol><h3 id="Visitor-number"><a href="#Visitor-number" class="headerlink" title="Visitor number"></a>Visitor number</h3><p>find <code>busuanzi_count</code> in your theme‚Äôs <code>_config.yml</code> and enable it.</p><h3 id="Post-word-count"><a href="#Post-word-count" class="headerlink" title="Post word count"></a>Post word count</h3><p>Reference can be found <a href="https://github.com/theme-next/hexo-symbols-count-time" target="_blank" rel="noopener">here</a></p><h3 id="Improved-the-arrangement-of-images-in-asset-folder"><a href="#Improved-the-arrangement-of-images-in-asset-folder" class="headerlink" title="Improved the arrangement of images in asset folder"></a>Improved the arrangement of images in asset folder</h3><p>Now suppose there is a image <strong>wow.jpg</strong> in the asset folder of a post named<strong>Hello</strong>. We could to use <code>![wow](wow.jpg)</code> to insert this image. But theannoying problem is that the image won‚Äôt show up in your markdown preview unlessyou use <code>![wow](Hello/wow.jpg)</code>. But‚Ä¶ the image won‚Äôt show up on your serverif <code>Hello/wow.jpg</code> is used<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png?v8">ü§¶‚ôÇ</span></p><p>This is because hexo will put the HTML page <strong>index.html</strong> of the post Hello andthe image <strong>wow.jpg</strong> into the same folder <strong>Hello</strong> in <strong>public</strong> folder.</p><p>So I modified following file to create a subfolder of the same name of the post in the folder where the post‚Äôs <strong>index.html</strong> is put.</p><p>in <strong>node_modules/hexo/lib/models/post_asset.js</strong></p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> pathFn.join(post.path.replace(<span class="regexp">/\.html?$/</span>, <span class="string">''</span>), <span class="keyword">this</span>.slug);</span><br></pre></td></tr></tbody></table></figure><p>change <code>line23</code> from <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2b06.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2b06.png?v8">‚¨Ü</span> to <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2b07.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2b07.png?v8">‚¨á</span></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> pathFn.join(post.path.replace(<span class="regexp">/\.html?$/</span>, <span class="string">''</span>), post.path.replace(<span class="regexp">/\.html?$/</span>, <span class="string">''</span>), <span class="keyword">this</span>.slug);</span><br></pre></td></tr></tbody></table></figure><p>Unfortunately, according to my test, the tag method to insert images provided by <a href="https://hexo.io/docs/asset-folders.html#Tag-Plugins-For-Relative-Path-Referencing" target="_blank" rel="noopener">Hexo</a>does not work as it supposed to anymore after modifying the <strong>post_asset.js</strong><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png?v8">ü§¶‚ôÇ</span>.Since I would use anything but the tags so this doesn‚Äôt bothers me<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f601.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f601.png?v8">üòÅ</span>. But if you want to improve this situation, I suppose you should modify <strong>node_modules\hexo\lib\plugins\tag\asset_img.js</strong></p><h3 id="Valine-comment-system"><a href="#Valine-comment-system" class="headerlink" title="Valine comment system"></a>Valine comment system</h3><ol><li><p>Search for <strong>Valine</strong> in your theme‚Äôs <code>_config.yml</code></p></li><li><p>then you just need to follow instructions <a href="https://valine.js.org/en/quickstart.html" target="_blank" rel="noopener">here</a>.</p></li></ol><h3 id="My-custom-styl"><a href="#My-custom-styl" class="headerlink" title="My custom.styl"></a>My custom.styl</h3><p>Although as I mentioned <a href="#custom-colors">here</a>, some settings only take effet ifis put in <code>themes/next/source/css/_custom/custom.styl</code> while some other should beput in <code>themes/next/source/css/_variables/custom.styl</code>, but it is a little bitannoying that I have to decide where do I put my settings. So I simply put allthe settings in both styl custom.styl<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">üòÜ</span>.</p><figure class="highlight styl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Custom styles.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//better response for mobile devices</span></span><br><span class="line"><span class="comment">//------------------------------------------------------------------------------</span></span><br><span class="line">@media (<span class="attribute">max-width</span>: <span class="number">425px</span>){</span><br><span class="line">    <span class="selector-class">.site-title</span> {</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">6vw</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="selector-class">.content-wrap</span> {</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">10px</span> !important;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">@media (<span class="attribute">max-width</span>: <span class="number">767px</span>){</span><br><span class="line">    <span class="selector-class">.posts-expand</span> {</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0px</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="comment">//------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//custom colors</span></span><br><span class="line"><span class="comment">//more colors here: http://nipponcolors.com/</span></span><br><span class="line"><span class="comment">//------------------------------------------------------------------------------</span></span><br><span class="line"><span class="variable">$site</span>-title-<span class="attribute">background</span>          = <span class="number">#828282</span></span><br><span class="line"><span class="variable">$site</span>-<span class="attribute">background</span>                = <span class="number">#828282</span></span><br><span class="line"><span class="variable">$post</span>-<span class="attribute">background</span>                = <span class="number">#828282</span></span><br><span class="line"><span class="variable">$font</span>-<span class="attribute">color</span>                     = <span class="number">#eee</span></span><br><span class="line"><span class="variable">$font</span>-<span class="attribute">color</span>-title               = <span class="number">#FFFFFB</span></span><br><span class="line"><span class="variable">$font</span>-<span class="attribute">color</span>-descript            = <span class="number">#ddd</span></span><br><span class="line"><span class="variable">$font</span>-<span class="attribute">color</span>-link                = <span class="number">#ccc</span></span><br><span class="line"><span class="variable">$font</span>-<span class="attribute">color</span>-menu                = <span class="number">#bbc</span></span><br><span class="line"><span class="variable">$font</span>-<span class="attribute">color</span>-hover               = <span class="number">#fc6423</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//backgrounds color</span></span><br><span class="line"><span class="variable">$body</span>-bg-<span class="attribute">color</span>                  = <span class="variable">$site</span>-background</span><br><span class="line"><span class="variable">$brand</span>-bg                       = <span class="variable">$site</span>-title-<span class="attribute">background</span></span><br><span class="line"><span class="selector-class">.content-wrap</span> {</span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">$site</span>-background;</span><br><span class="line">}</span><br><span class="line">.post-block{</span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">$post</span>-background;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.sidebar-inner</span>, <span class="selector-class">.header-inner</span>, <span class="selector-class">.sidebar</span> {</span><br><span class="line">    <span class="attribute">background</span>: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>); <span class="comment">//opacity = 0</span></span><br><span class="line">}</span><br><span class="line"><span class="comment">//fonts color</span></span><br><span class="line"><span class="variable">$text</span>-<span class="attribute">color</span>                     = <span class="variable">$font</span>-color</span><br><span class="line"><span class="variable">$site</span>-author-name-<span class="attribute">color</span>         = <span class="variable">$font</span>-color</span><br><span class="line"><span class="variable">$sidebar</span>-nav-<span class="attribute">color</span>              = <span class="variable">$font</span>-color-descript</span><br><span class="line"><span class="variable">$site</span>-state-item-name-<span class="attribute">color</span>     = <span class="variable">$font</span>-color-descript</span><br><span class="line"><span class="variable">$link</span>-<span class="attribute">color</span>                     = <span class="variable">$font</span>-color</span><br><span class="line"><span class="variable">$link</span>-hover-<span class="attribute">color</span>               = <span class="variable">$font</span>-color-link</span><br><span class="line"><span class="variable">$link</span>-decoration-hover-<span class="attribute">color</span>    = <span class="variable">$font</span>-color-hover</span><br><span class="line"><span class="variable">$toc</span>-link-<span class="attribute">color</span>                 = <span class="variable">$font</span>-color</span><br><span class="line"><span class="variable">$toc</span>-link-hover-<span class="attribute">color</span>           = <span class="variable">$font</span>-color-link</span><br><span class="line"><span class="variable">$toc</span>-link-hover-<span class="attribute">border-color</span>    = <span class="variable">$font</span>-color-hover</span><br><span class="line"><span class="variable">$site</span>-subtitle-<span class="attribute">color</span>            = <span class="variable">$font</span>-color-descript</span><br><span class="line"><span class="variable">$site</span>-description-<span class="attribute">color</span>         = <span class="variable">$font</span>-color-descript</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.menu-item</span> <span class="selector-tag">a</span> {</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$font</span>-color-menu;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.links-of-author-item</span> <span class="selector-tag">a</span> {</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$font</span>-color;</span><br><span class="line">}</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.post-title-link</span>, <span class="selector-class">.post-title</span> {</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$font</span>-color-title !important;</span><br><span class="line">}</span><br><span class="line"><span class="selector-tag">span</span>.site-state-item-count{</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$font</span>-color-title;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.site-state-item</span> {</span><br><span class="line">    &amp;:hover {</span><br><span class="line">        <span class="selector-tag">span</span><span class="selector-class">.site-state-item-count</span> {</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#ffd239</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="selector-tag">blockquote</span> {</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#abd</span> !important;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// shadow for post blocks</span></span><br><span class="line"><span class="selector-class">.post</span> {</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">    -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">    -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">}</span><br><span class="line"><span class="comment">//------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//colorful icons</span></span><br><span class="line"><span class="comment">//------------------------------------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.icon</span> {</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1.5em</span> !important;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1.5em</span> !important;</span><br><span class="line">    <span class="attribute">vertical-align</span>: -<span class="number">0.4em</span>;</span><br><span class="line">    fill: currentColor;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//better organized post-block</span></span><br><span class="line"><span class="comment">//------------------------------------------------------------------------------</span></span><br><span class="line">.post-block{</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">}</span><br><span class="line">.post-eof{</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//disable image border</span></span><br><span class="line"><span class="comment">//------------------------------------------------------------------------------</span></span><br><span class="line"><span class="selector-tag">img</span> {</span><br><span class="line">    <span class="attribute">border</span>: none !important;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>Thank you for reading!</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;right&quot;&gt;Language:
&lt;a href=&quot;/2018/12/24/About-My-Custom-Settings-of-My-Next-Theme-Blog-and-Problem-Killing&quot;&gt;&lt;kbd&gt;English&lt;/kbd&gt;&lt;/a&gt;
&lt;a href=&quot;/zh-CN/2019/01/07/ÂÖ≥‰∫éÊàëÁöÑNexT‰∏ªÈ¢òÂçöÂÆ¢ÁöÑ‰∏™ÊÄßÂåñÈÖçÁΩÆ‰ª•ÂèäÈÅáÂà∞ÁöÑ‰∏Ä‰∫õÈóÆÈ¢ò&quot;&gt;&lt;kbd&gt;‰∏≠Êñá&lt;/kbd&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;This blog site is powered by &lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;, the theme is &lt;a href=&quot;https://theme-next.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;NexT&lt;/a&gt;,
the scheme is &lt;code&gt;Pisces&lt;/code&gt;. After I started building my blog with Hexo, I found that
actually there are some more Static Site Generators which are considered better
than Hexo. You can find a ranking list of the Static Site Generators &lt;a href=&quot;https://www.staticgen.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;here&lt;/a&gt;.
(But if you have already get started with Hexo, it is O.K. At least I think it
is good enough)&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://leojhonsong.github.io/categories/Web/"/>
    
      <category term="Configuration" scheme="https://leojhonsong.github.io/categories/Configuration/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://leojhonsong.github.io/2018/12/22/hello-world/"/>
    <id>https://leojhonsong.github.io/2018/12/22/hello-world/</id>
    <published>2018-12-22T14:29:00.000Z</published>
    <updated>2019-10-06T22:34:05.919Z</updated>
    
    <content type="html"><![CDATA[<div align="right">Language:    <a href="/2018/12/22/hello-world"><kbd>English</kbd></a>    <a href="/zh-CN/2018/12/22/Â§ßÂÆ∂Â•Ω"><kbd>‰∏≠Êñá</kbd></a></div><h2 id="My-first-blog-on-my-own-site"><a href="#My-first-blog-on-my-own-site" class="headerlink" title="My first blog on my own site"></a>My first blog on my own site</h2><a id="more"></a><hr><p><strong>Hi, here is LeoJhon.Song‚Äôs first post!</strong> I suppose the only reason you are here is that you have nothing else to do. <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f609.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f609.png?v8">üòâ</span>  </p><div><sub><sub><sup><sup>orbecause I shamefully wrote nothing else than this.</sup></sup></sub></sub></div><p></p><hr><p>OK. Finally, I build my own sweet little blog independent from annoy Chinese blog sites. It looks far much better don‚Äôt it?</p><p>I plan to <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/0031-20e3.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/0031-20e3.png?v8">1‚É£</span> <strong>log my study experience</strong> (I found posting my schedule could force me doing things which I intend to do but not do at lastbecause of laziness) and maybe some casual essay if I have the mood. It is really a good way to arrange your knowledge since there are too many smallpieces of knowledge nowadays. Besides, a most important reason is that I want to <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/0032-20e3.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/0032-20e3.png?v8">2‚É£</span> <strong>share the cool things</strong> I found as <strong>I find it tastes thesame with taking drug</strong>.</p><p>I hope the future me won‚Äôt forget this.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;right&quot;&gt;Language:
    &lt;a href=&quot;/2018/12/22/hello-world&quot;&gt;&lt;kbd&gt;English&lt;/kbd&gt;&lt;/a&gt;
    &lt;a href=&quot;/zh-CN/2018/12/22/Â§ßÂÆ∂Â•Ω&quot;&gt;&lt;kbd&gt;‰∏≠Êñá&lt;/kbd&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&quot;My-first-blog-on-my-own-site&quot;&gt;&lt;a href=&quot;#My-first-blog-on-my-own-site&quot; class=&quot;headerlink&quot; title=&quot;My first blog on my own site&quot;&gt;&lt;/a&gt;My first blog on my own site&lt;/h2&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
